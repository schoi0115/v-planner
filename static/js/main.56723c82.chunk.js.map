{"version":3,"sources":["component/Home.js","component/Next.js","component/Calendar1.js","component/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","travel","setTravel","useEffect","fetch","then","r","json","className","map","data","location","Next","setLocation","name","setName","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","ok","type","value","onChange","target","Calendar1","Date","date","setDate","addEvent","setAddevent","selectRange","nextLabel","nextAriaLabel","next2Label","next2AriaLabel","prevLabel","prevAriaLabel","prev2Label","prev2AriaLabel","length","toDateString","onClick","placeholder","NavBar","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56723c82.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\n\nfunction Home(){\n\n   \n    const [travel, setTravel] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:8000/travels\")\n            .then(r => r.json())\n            .then(setTravel)\n        }, [])\n\n\n    return(\n        <div className=\"backgroundPic\">\n            <h3> .</h3>\n            <h1 className=\"title\">Shawn â™¡ Barbies Planner</h1>\n\n            {travel.map((data)=> data.location)}\n\n \n        </div>\n    )\n}\n\nexport default Home","import React, { useState } from \"react\"\n\nfunction Next({location, setLocation}){\n    const [name, setName] = useState(\"\")\n\n    function handleSubmit(e) {\n        e.preventDefault();\n          fetch(\"http://localhost:8000/travels\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              name,\n            }),\n          }).then((r) => {\n            if (r.ok) {\n              r.json()\n              .then((data) => setLocation([...location, data]));\n            }\n          });\n      }\n\n    return(\n    <div className=\"next\">\n        <form onSubmit={handleSubmit} className=\"formSubmit\">\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n            </label>\n            <input className=\"submitBtn\" type=\"submit\" value=\"Submit\" />\n        </form>\n\n    </div>\n    )\n}\nexport default Next","import React, { useState } from \"react\"\nimport Calendar from \"react-calendar\"\nimport 'react-calendar/dist/Calendar.css';\nimport Next from \"./Next\"\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction Calendar1(){\n    const [date, setDate] = useState(new Date());\n    const [addEvent, setAddevent] =useState(false)\n\n    function showForm(){\n        setAddevent(!addEvent)\n    }\n\n\n\n\n    return(\n        <div className='calendar'>\n            <div className='calendar-container'>\n            <Calendar\n                className='calendar-body'\n                onChange={setDate}\n                value={date}\n                selectRange={true}\n\n                nextLabel='month>'\n                nextAriaLabel='Go to next month'\n                next2Label='year>'\n                next2AriaLabel='Go to next year'\n                prevLabel='<month'\n                prevAriaLabel='Go to prev month'\n                prev2Label='<year'\n                prev2AriaLabel='Go to prev year'\n            />\n            </div>\n            {date.length > 0 ? (\n            <p className=\"calendar-select-dates\">\n                <span>Start: </span>\n                {date[0].toDateString()}\n                \n                <span> ~ End:</span> {date[1].toDateString()}\n                <br />\n                {/* <NavLink to=\"/next\" className=\"add-event-btn\">Add Event</NavLink> */}\n\n                <div className=\"add-event-btn\" onClick={showForm}>{addEvent? (\n                    <div >\n                        <h1 className=\"add-event-btn\">\n                            Add Event\n                        </h1>\n                        <form>\n                            <input placeholder=\"Location\" />\n                            <input placeholder=\"Car / Flight / Train\" />\n                            <input placeholder=\"Hello?\" />\n                            <input placeholder=\"hm ....\" />\n                        </form>\n                    </div>\n                ):(\n                    <div>\n                    <h1 className=\"add-event-btn\">Add Event</h1>\n                    </div>                    \n                    )}\n                    </div>\n            </p>\n            ) : (\n            <p>\n                <span className=\"calendar-select-dates-defualt\">Selected Date: {date.toDateString()}</span>\n            </p>\n            )}\n            <div>\n            <div>     \n                <h1>\n                    Select Your Vacation Date!\n                </h1>\n            </div>\n            </div>\n      </div>\n    );\n  }\n  \nexport default Calendar1","import \"../App.css\";\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { NavLink } from \"react-router-dom\";\n\n\n\nfunction NavBar() {\n\n\n\n\n    return (\n      <div className=\"nav-container\">\n\n        <nav>\n        \n                <NavLink className='margin' to='/v-planner'>\n\n                Home \n          \n                </NavLink> \n                <NavLink className='margin' to='/calendar'>\n                Calendar \n                </NavLink>\n\n\n\n  \n        </nav>\n\n        <div>\n            <NavLink  to='/next'>\n                <a className='marginNext'>\n                Next \n                </a>\n            </NavLink>\n        </div>\n      </div>\n    );\n \n}\n\nexport default NavBar;\n\n","import './App.css';\nimport React, { useState } from 'react';\nimport { Switch, Route, Link } from \"react-router-dom\";\n// import Calendar from 'react-calendar';\n// import 'react-calendar/dist/Calendar.css';\n\n\nimport Home from \"./component/Home\"\nimport Next from \"./component/Next\"\nimport Calendar1 from './component/Calendar1';\nimport NavBar from './component/NavBar';\n\nfunction App() {\n  const [location, setLocation] = useState(\"\")\n  \n\n  return (\n    <div>\n      \n      <div className=\"bgcolor\">\n      \n      <NavBar />\n      <main>\n        <Switch >\n          <Route exact path=\"/v-planner\" >\n            <Home \n            />\n          </Route>\n          <Route exact path=\"/next\" >\n            <Next \n            location={location}\n            setLocation={setLocation}\n            />\n          </Route>\n          <Route exact path=\"/calendar\" >\n            <Calendar1 \n            />\n          </Route>\n\n   \n        </Switch>\n        </main>\n    \n    </div>\n      \n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter \n} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}